// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zzell/transfer/db/repo (interfaces: WalletsRepo)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/zzell/transfer/model"
	reflect "reflect"
)

// MockWalletsRepo is a mock of WalletsRepo interface
type MockWalletsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockWalletsRepoMockRecorder
}

// MockWalletsRepoMockRecorder is the mock recorder for MockWalletsRepo
type MockWalletsRepoMockRecorder struct {
	mock *MockWalletsRepo
}

// NewMockWalletsRepo creates a new mock instance
func NewMockWalletsRepo(ctrl *gomock.Controller) *MockWalletsRepo {
	mock := &MockWalletsRepo{ctrl: ctrl}
	mock.recorder = &MockWalletsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWalletsRepo) EXPECT() *MockWalletsRepoMockRecorder {
	return m.recorder
}

// GetWallet mocks base method
func (m *MockWalletsRepo) GetWallet(arg0 int) (*model.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWallet", arg0)
	ret0, _ := ret[0].(*model.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWallet indicates an expected call of GetWallet
func (mr *MockWalletsRepoMockRecorder) GetWallet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWallet", reflect.TypeOf((*MockWalletsRepo)(nil).GetWallet), arg0)
}

// Transfer mocks base method
func (m *MockWalletsRepo) Transfer(arg0, arg1 int, arg2, arg3 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Transfer indicates an expected call of Transfer
func (mr *MockWalletsRepoMockRecorder) Transfer(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockWalletsRepo)(nil).Transfer), arg0, arg1, arg2, arg3)
}
